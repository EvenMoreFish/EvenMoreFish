"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6328],{1688:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>r,contentTitle:()=>c,default:()=>d,frontMatter:()=>h,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"features/weights","title":"Weight System","description":"Explaining the weight system","source":"@site/docs/features/weights.md","sourceDirName":"features","slug":"/features/weights","permalink":"/EvenMoreFish/docs/features/weights","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Weight System","description":"Explaining the weight system"},"sidebar":"tutorialSidebar","previous":{"title":"Requirements","permalink":"/EvenMoreFish/docs/features/requirements"},"next":{"title":"Commands Reference","permalink":"/EvenMoreFish/docs/commands"}}');var s=n(4848),l=n(8453);const h={title:"Weight System",description:"Explaining the weight system"},c="Weight System Explanation",r={},o=[{value:"How It Works",id:"how-it-works",level:2},{value:"Example with Three Items",id:"example-with-three-items",level:2},{value:"Given Weights:",id:"given-weights",level:3},{value:"Step 1: Calculate the Total Weight",id:"step-1-calculate-the-total-weight",level:3},{value:"Step 2: Calculate the Probability for Each Item",id:"step-2-calculate-the-probability-for-each-item",level:3},{value:"Common",id:"common",level:4},{value:"Epic",id:"epic",level:4},{value:"Junk",id:"junk",level:4},{value:"Final Chances",id:"final-chances",level:3},{value:"Summary",id:"summary",level:2},{value:"Baits and Boosted Weights",id:"baits-and-boosted-weights",level:2},{value:"How It Works",id:"how-it-works-1",level:3},{value:"Effective Weight Calculation",id:"effective-weight-calculation",level:3},{value:"Example",id:"example",level:3},{value:"Recalculated Total Weight",id:"recalculated-total-weight",level:3},{value:"New Selection Chances",id:"new-selection-chances",level:3},{value:"Summary",id:"summary-1",level:3}];function a(e){const i={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"weight-system-explanation",children:"Weight System Explanation"})}),"\n",(0,s.jsx)(i.p,{children:"This system uses weights to define the importance or likelihood of an object being selected. The weights are translated into percentages to reflect the probability of each object being chosen."}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"how-it-works",children:"How It Works"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Weights are assigned to each object"})," based on their importance or likelihood of being selected."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"The total weight"})," is calculated by adding up all the individual weights."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"The probability"})," of each object being selected is calculated by dividing its weight by the total weight."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"The probability is converted to a percentage"})," by multiplying by 100."]}),"\n"]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"example-with-three-items",children:"Example with Three Items"}),"\n",(0,s.jsx)(i.h3,{id:"given-weights",children:"Given Weights:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Common"}),": Weight = 100"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Epic"}),": Weight = 3"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Junk"}),": Weight = 5"]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"step-1-calculate-the-total-weight",children:"Step 1: Calculate the Total Weight"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-text",children:"Total Weight = Weight of Common + Weight of Epic + Weight of Junk\n             = 100 + 3 + 5\n             = 108\n"})}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h3,{id:"step-2-calculate-the-probability-for-each-item",children:"Step 2: Calculate the Probability for Each Item"}),"\n",(0,s.jsx)(i.h4,{id:"common",children:"Common"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-text",children:"Probability = Weight of Common / Total Weight\n            = 100 / 108\n            \u2248 0.9259\n\nPercentage = 0.9259 \xd7 100\n           \u2248 92.59%\n"})}),"\n",(0,s.jsx)(i.h4,{id:"epic",children:"Epic"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-text",children:"Probability = Weight of Epic / Total Weight\n            = 3 / 108\n            \u2248 0.0278\n\nPercentage = 0.0278 \xd7 100\n           \u2248 2.78%\n"})}),"\n",(0,s.jsx)(i.h4,{id:"junk",children:"Junk"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-text",children:"Probability = Weight of Junk / Total Weight\n            = 5 / 108\n            \u2248 0.0463\n\nPercentage = 0.0463 \xd7 100\n           \u2248 4.63%\n"})}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h3,{id:"final-chances",children:"Final Chances"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Common"}),": ~92.59% chance of being selected."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Epic"}),": ~2.78% chance of being selected."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Junk"}),": ~4.63% chance of being selected."]}),"\n"]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"summary",children:"Summary"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["The ",(0,s.jsx)(i.strong,{children:"Common"})," item is the most likely to be selected due to its high weight."]}),"\n",(0,s.jsxs)(i.li,{children:["The ",(0,s.jsx)(i.strong,{children:"Epic"})," item has a very low chance of being selected."]}),"\n",(0,s.jsxs)(i.li,{children:["The ",(0,s.jsx)(i.strong,{children:"Junk"})," item has a slightly higher chance than the ",(0,s.jsx)(i.strong,{children:"Epic"})," item but is still much less likely than the ",(0,s.jsx)(i.strong,{children:"Common"})," item."]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"This system ensures that objects with higher weights are prioritized in the selection process."}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h2,{id:"baits-and-boosted-weights",children:"Baits and Boosted Weights"}),"\n",(0,s.jsx)(i.p,{children:"Baits modify the selection chances of specific items by boosting their weights. When a bait is applied, it multiplies the base weight of the affected items, effectively increasing their likelihood of being selected."}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h3,{id:"how-it-works-1",children:"How It Works"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Each item has a base weight"}),", which defines its normal chance of being selected."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Baits can boost specific items"})," by increasing their effective weight."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"The boost is applied"})," by multiplying the item's base weight by a ",(0,s.jsx)(i.code,{children:"boostRate"})," if the item is in the list of ",(0,s.jsx)(i.code,{children:"boosted"})," items."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Items not boosted"})," retain their original base weight."]}),"\n"]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h3,{id:"effective-weight-calculation",children:"Effective Weight Calculation"}),"\n",(0,s.jsx)(i.p,{children:"The effective weight of an item is determined using the following logic:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-java",children:"private static <T> double getEffectiveWeight(\n        T element,\n        @NotNull ToDoubleFunction<T> weightFunction,\n        double boostRate,\n        Set<T> boosted\n) {\n    double baseWeight = weightFunction.applyAsDouble(element);\n    if (baseWeight <= 0.0) return 0.0;\n\n    return (boostRate != -1 && boosted.contains(element))\n            ? baseWeight * boostRate\n            : baseWeight;\n}\n"})}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:["If the item\u2019s base weight is ",(0,s.jsx)(i.code,{children:"0"})," or less, it will not be considered."]}),"\n",(0,s.jsxs)(i.li,{children:["If the item is ",(0,s.jsxs)(i.strong,{children:["in the ",(0,s.jsx)(i.code,{children:"boosted"})," set"]})," and ",(0,s.jsx)(i.code,{children:"boostRate"})," is not ",(0,s.jsx)(i.code,{children:"-1"}),", its weight is multiplied by the ",(0,s.jsx)(i.code,{children:"boostRate"}),"."]}),"\n",(0,s.jsx)(i.li,{children:"Otherwise, the base weight remains unchanged."}),"\n"]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h3,{id:"example",children:"Example"}),"\n",(0,s.jsx)(i.p,{children:"Suppose you have the following bait configuration:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Boost Rate"}),": ",(0,s.jsx)(i.code,{children:"2.0"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Boosted Items"}),": ",(0,s.jsx)(i.code,{children:"{Epic}"})]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"And the base weights are:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Common"}),": 100"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Epic"}),": 3"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Junk"}),": 5"]}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["The ",(0,s.jsx)(i.strong,{children:"effective weights"})," would be:"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Common"}),": 100"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Epic"}),": 3 \xd7 2.0 = 6"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Junk"}),": 5"]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"recalculated-total-weight",children:"Recalculated Total Weight"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-text",children:"Total Weight = 100 (Common) + 6 (Epic) + 5 (Junk)\n             = 111\n"})}),"\n",(0,s.jsx)(i.h3,{id:"new-selection-chances",children:"New Selection Chances"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Common"}),": 100 / 111 \u2248 90.09%"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Epic"}),": 6 / 111 \u2248 5.41%"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Junk"}),": 5 / 111 \u2248 4.50%"]}),"\n"]}),"\n",(0,s.jsx)(i.hr,{}),"\n",(0,s.jsx)(i.h3,{id:"summary-1",children:"Summary"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Baits dynamically shift the probability distribution by increasing the weight of specific items."}),"\n",(0,s.jsx)(i.li,{children:"This system allows targeted promotion of certain items without altering the base configuration."}),"\n",(0,s.jsx)(i.li,{children:"It preserves the fairness and transparency of the weight system while offering additional control through boosting."}),"\n"]}),"\n",(0,s.jsx)(i.hr,{})]})}function d(e={}){const{wrapper:i}={...(0,l.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>h,x:()=>c});var t=n(6540);const s={},l=t.createContext(s);function h(e){const i=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:h(e.components),t.createElement(l.Provider,{value:i},e.children)}}}]);