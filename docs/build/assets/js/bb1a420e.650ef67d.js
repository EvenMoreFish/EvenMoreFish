"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[374],{4733:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"developers/creating-rewards-types","title":"Creating Reward Types","description":"How to create your own RewardTypes","source":"@site/docs/developers/creating-rewards-types.md","sourceDirName":"developers","slug":"/developers/creating-rewards-types","permalink":"/docs/developers/creating-rewards-types","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Creating Reward Types","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Creating Item Addons","permalink":"/docs/developers/creating-item-addons"},"next":{"title":"Copyright & Additional Libraries","permalink":"/docs/copyright"}}');var i=n(4848),o=n(8453);const a={title:"Creating Reward Types",sidebar_position:3},s=void 0,d={},l=[{value:"How to create your own RewardTypes",id:"how-to-create-your-own-rewardtypes",level:2}];function c(e){const r={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h2,{id:"how-to-create-your-own-rewardtypes",children:"How to create your own RewardTypes"}),"\n",(0,i.jsxs)(r.p,{children:["The ",(0,i.jsx)(r.a,{href:"https://github.com/EvenMoreFish/EvenMoreFish/blob/master/even-more-fish-api/src/main/java/com/oheers/fish/api/reward/RewardType.java",children:"RewardType"})," interface exists in the API module of EvenMoreFish. Below is an example of how to use it."]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-java",children:'/**\r\n * This is the EXP RewardType that exists inside EvenMoreFish.\r\n */\r\npublic class EXPRewardType extends RewardType {\r\n\r\n    /**\r\n     * The reward itself is handled here.\r\n     * @param player The player this reward is meant for.\r\n     * @param key The key of this reward, should match the identifier.\r\n     * @param value The value of this reward. For example EXP:5000, 5000 is the value.\r\n     * @param hookLocation The location of the player\'s fishing hook.\r\n     */\r\n    @Override\r\n    public void doReward(@NotNull Player player, @NotNull String key, @NotNull String value, Location hookLocation) {\r\n        int experience;\r\n        try {\r\n            experience = Integer.parseInt(value);\r\n        } catch (NumberFormatException ex) {\r\n            EvenMoreFish.getInstance().getLogger().warning("Invalid number specified for RewardType " + getIdentifier() + ": " + value);\r\n            return;\r\n        }\r\n        player.giveExp(experience);\r\n    }\r\n\r\n    /**\r\n     * The identifier of this RewardType.\r\n     * If a RewardType already exists with this identifier, this type will not be registered.\r\n     */\r\n    @Override\r\n    public @NotNull String getIdentifier() {\r\n        return "EXP";\r\n    }\r\n\r\n    /**\r\n     * The author of this RewardType.\r\n     * This is shown in the admin command, and is intended to credit the author.\r\n     */\r\n    @Override\r\n    public @NotNull String getAuthor() {\r\n        return "FireML";\r\n    }\r\n\r\n    /**\r\n     * The plugin responsible for this RewardType.\r\n     * This is also shown in the admin command.\r\n     */\r\n    @Override\r\n    public @NotNull Plugin getPlugin() {\r\n        return EvenMoreFish.getInstance();\r\n    }\r\n\r\n}\n'})}),"\n",(0,i.jsx)(r.p,{children:"After writing your own class, you can register it with EMF using the RewardType#register method."})]})}function p(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>s});var t=n(6540);const i={},o=t.createContext(i);function a(e){const r=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(o.Provider,{value:r},e.children)}}}]);