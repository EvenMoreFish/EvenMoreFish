"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[374],{4733:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"developers/creating-rewards-types","title":"Creating Reward Types","description":"How to create your own RewardTypes","source":"@site/docs/developers/creating-rewards-types.md","sourceDirName":"developers","slug":"/developers/creating-rewards-types","permalink":"/EvenMoreFish/docs/developers/creating-rewards-types","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"Creating Reward Types","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Creating Item Addons","permalink":"/EvenMoreFish/docs/developers/creating-item-addons"},"next":{"title":"Copyright & Additional Libraries","permalink":"/EvenMoreFish/docs/copyright"}}');var i=r(4848),o=r(8453);const a={title:"Creating Reward Types",sidebar_position:3},s=void 0,d={},l=[{value:"How to create your own RewardTypes",id:"how-to-create-your-own-rewardtypes",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"how-to-create-your-own-rewardtypes",children:"How to create your own RewardTypes"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.a,{href:"https://github.com/EvenMoreFish/EvenMoreFish/blob/master/even-more-fish-api/src/main/java/com/oheers/fish/api/reward/RewardType.java",children:"RewardType"})," interface exists in the API module of EvenMoreFish. Below is an example of how to use it."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'/**\n * This is the EXP RewardType that exists inside EvenMoreFish.\n */\npublic class EXPRewardType extends RewardType {\n\n    /**\n     * The reward itself is handled here.\n     * @param player The player this reward is meant for.\n     * @param key The key of this reward, should match the identifier.\n     * @param value The value of this reward. For example EXP:5000, 5000 is the value.\n     * @param hookLocation The location of the player\'s fishing hook.\n     */\n    @Override\n    public void doReward(@NotNull Player player, @NotNull String key, @NotNull String value, Location hookLocation) {\n        int experience;\n        try {\n            experience = Integer.parseInt(value);\n        } catch (NumberFormatException ex) {\n            EvenMoreFish.getInstance().getLogger().warning("Invalid number specified for RewardType " + getIdentifier() + ": " + value);\n            return;\n        }\n        player.giveExp(experience);\n    }\n\n    /**\n     * The identifier of this RewardType.\n     * If a RewardType already exists with this identifier, this type will not be registered.\n     */\n    @Override\n    public @NotNull String getIdentifier() {\n        return "EXP";\n    }\n\n    /**\n     * The author of this RewardType.\n     * This is shown in the admin command, and is intended to credit the author.\n     */\n    @Override\n    public @NotNull String getAuthor() {\n        return "FireML";\n    }\n\n    /**\n     * The plugin responsible for this RewardType.\n     * This is also shown in the admin command.\n     */\n    @Override\n    public @NotNull Plugin getPlugin() {\n        return EvenMoreFish.getInstance();\n    }\n\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:"After writing your own class, you can register it with EMF using the RewardType#register method."})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>s});var t=r(6540);const i={},o=t.createContext(i);function a(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);